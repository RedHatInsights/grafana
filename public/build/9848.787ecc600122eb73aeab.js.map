{"version":3,"file":"9848.787ecc600122eb73aeab.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/NodeGraphSettings.tsx","webpack://grafana/./public/app/core/components/TraceToLogsSettings.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/graphTransform.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/util.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/AdvancedOptions.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/components/SearchForm.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/datasource.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/ConfigEditor.tsx","webpack://grafana/./public/app/plugins/datasource/jaeger/module.ts","webpack://grafana/./public/app/plugins/datasource/jaeger/components/QueryEditor.tsx","webpack://grafana/./.yarn/__virtual__/react-transition-group-virtual-08a7713bd0/0/cache/react-transition-group-npm-4.4.1-5b62a122ef-0bcd8af483.zip/node_modules/react-transition-group/esm/CSSTransition.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/body_parser_stream.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logfmt_parser.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/logger.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/request_logger.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/streaming.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/lib/stringify.js","webpack://grafana/./.yarn/cache/logfmt-npm-1.3.2-37fabee436-639d327c1e.zip/node_modules/logfmt/logfmt.js","webpack://grafana/./.yarn/cache/split-npm-0.2.10-a950dc8c82-9eb1195608.zip/node_modules/split/index.js","webpack://grafana/./.yarn/cache/through-npm-2.3.8-df5f72a16e-a38c3e0598.zip/node_modules/through/index.js"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { InlineField, InlineFieldRow, InlineSwitch, useStyles } from '@grafana/ui';\n\nexport interface NodeGraphOptions {\n  enabled?: boolean;\n}\n\nexport interface NodeGraphData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<NodeGraphData> {}\n\nexport function NodeGraphSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <h3 className=\"page-heading\">Node Graph</h3>\n      <InlineFieldRow className={styles.row}>\n        <InlineField\n          tooltip=\"Enables the Node Graph visualization in the trace viewer.\"\n          label=\"Enable Node Graph\"\n          labelWidth={26}\n        >\n          <InlineSwitch\n            value={options.jsonData.nodeGraph?.enabled}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'nodeGraph', {\n                ...options.jsonData.nodeGraph,\n                enabled: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  container: css`\n    label: container;\n    width: 100%;\n  `,\n  row: css`\n    label: row;\n    align-items: baseline;\n  `,\n});\n","import { css } from '@emotion/css';\nimport {\n  DataSourceJsonData,\n  DataSourcePluginOptionsEditorProps,\n  GrafanaTheme,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { InlineField, InlineFieldRow, Input, TagsInput, useStyles, InlineSwitch } from '@grafana/ui';\nimport React from 'react';\n\nexport interface TraceToLogsOptions {\n  datasourceUid?: string;\n  tags?: string[];\n  spanStartTimeShift?: string;\n  spanEndTimeShift?: string;\n  filterByTraceID?: boolean;\n  filterBySpanID?: boolean;\n  lokiSearch?: boolean;\n}\n\nexport interface TraceToLogsData extends DataSourceJsonData {\n  tracesToLogs?: TraceToLogsOptions;\n}\n\ninterface Props extends DataSourcePluginOptionsEditorProps<TraceToLogsData> {}\n\nexport function TraceToLogsSettings({ options, onOptionsChange }: Props) {\n  const styles = useStyles(getStyles);\n\n  return (\n    <div className={css({ width: '100%' })}>\n      <h3 className=\"page-heading\">Trace to logs</h3>\n\n      <div className={styles.infoText}>\n        Trace to logs let&apos;s you navigate from a trace span to the selected data source&apos;s log.\n      </div>\n\n      <InlineFieldRow>\n        <InlineField tooltip=\"The data source the trace is going to navigate to\" label=\"Data source\" labelWidth={26}>\n          <DataSourcePicker\n            pluginId=\"loki\"\n            current={options.jsonData.tracesToLogs?.datasourceUid}\n            noDefault={true}\n            width={40}\n            onChange={(ds) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: ds.uid,\n                tags: options.jsonData.tracesToLogs?.tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          tooltip=\"Tags that will be used in the Loki query. Default tags: 'cluster', 'hostname', 'namespace', 'pod'\"\n          label=\"Tags\"\n          labelWidth={26}\n        >\n          <TagsInput\n            tags={options.jsonData.tracesToLogs?.tags}\n            width={40}\n            onChange={(tags) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                datasourceUid: options.jsonData.tracesToLogs?.datasourceUid,\n                tags: tags,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span start time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the start time of the span. Default 0 (Time units can be used here, for example: 5s, 1m, 3h)\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanStartTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanStartTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Span end time shift\"\n          labelWidth={26}\n          grow\n          tooltip=\"Shifts the end time of the span. Default 0 Time units can be used here, for example: 5s, 1m, 3h\"\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"1h\"\n            width={40}\n            onChange={(v) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                spanEndTimeShift: v.currentTarget.value,\n              })\n            }\n            value={options.jsonData.tracesToLogs?.spanEndTimeShift || ''}\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Trace ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Trace ID. Appends '|=<trace id>' to the query.\"\n        >\n          <InlineSwitch\n            value={options.jsonData.tracesToLogs?.filterByTraceID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterByTraceID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n\n      <InlineFieldRow>\n        <InlineField\n          label=\"Filter by Span ID\"\n          labelWidth={26}\n          grow\n          tooltip=\"Filters logs by Span ID. Appends '|=<span id>' to the query.\"\n        >\n          <InlineSwitch\n            value={options.jsonData.tracesToLogs?.filterBySpanID}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                filterBySpanID: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Loki Search\" labelWidth={26} grow tooltip=\"Use this logs data source to search for traces.\">\n          <InlineSwitch\n            defaultChecked={true}\n            value={options.jsonData.tracesToLogs?.lokiSearch}\n            onChange={(event: React.SyntheticEvent<HTMLInputElement>) =>\n              updateDatasourcePluginJsonDataOption({ onOptionsChange, options }, 'tracesToLogs', {\n                ...options.jsonData.tracesToLogs,\n                lokiSearch: event.currentTarget.checked,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  infoText: css`\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textSemiWeak};\n  `,\n});\n","import { DataFrame, NodeGraphDataFrameFieldNames as Fields } from '@grafana/data';\nimport { Span, TraceResponse } from './types';\nimport { getNonOverlappingDuration, getStats, makeFrames, makeSpanMap } from '../../../core/utils/tracing';\n\ninterface Node {\n  [Fields.id]: string;\n  [Fields.title]: string;\n  [Fields.subTitle]: string;\n  [Fields.mainStat]: string;\n  [Fields.secondaryStat]: string;\n  [Fields.color]: number;\n}\n\ninterface Edge {\n  [Fields.id]: string;\n  [Fields.target]: string;\n  [Fields.source]: string;\n}\n\nexport function createGraphFrames(data: TraceResponse): DataFrame[] {\n  const { nodes, edges } = convertTraceToGraph(data);\n  const [nodesFrame, edgesFrame] = makeFrames();\n\n  for (const node of nodes) {\n    nodesFrame.add(node);\n  }\n\n  for (const edge of edges) {\n    edgesFrame.add(edge);\n  }\n\n  return [nodesFrame, edgesFrame];\n}\n\nfunction convertTraceToGraph(data: TraceResponse): { nodes: Node[]; edges: Edge[] } {\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n\n  const traceDuration = findTraceDuration(data.spans);\n\n  const spanMap = makeSpanMap((index) => {\n    if (index >= data.spans.length) {\n      return undefined;\n    }\n    const span = data.spans[index];\n    return {\n      span,\n      id: span.spanID,\n      parentIds: span.references?.filter((r) => r.refType === 'CHILD_OF').map((r) => r.spanID) || [],\n    };\n  });\n\n  for (const span of data.spans) {\n    const process = data.processes[span.processID];\n\n    const ranges: Array<[number, number]> = spanMap[span.spanID].children.map((c) => {\n      const span = spanMap[c].span;\n      return [span.startTime, span.startTime + span.duration];\n    });\n    const childrenDuration = getNonOverlappingDuration(ranges);\n    const selfDuration = span.duration - childrenDuration;\n    const stats = getStats(span.duration / 1000, traceDuration / 1000, selfDuration / 1000);\n\n    nodes.push({\n      [Fields.id]: span.spanID,\n      [Fields.title]: process?.serviceName ?? '',\n      [Fields.subTitle]: span.operationName,\n      [Fields.mainStat]: stats.main,\n      [Fields.secondaryStat]: stats.secondary,\n      [Fields.color]: selfDuration / traceDuration,\n    });\n\n    const parentSpanID = span.references?.find((r) => r.refType === 'CHILD_OF')?.spanID;\n    // Sometimes some span can be missing. Don't add edges for those.\n    if (parentSpanID && spanMap[parentSpanID].span) {\n      edges.push({\n        [Fields.id]: parentSpanID + '--' + span.spanID,\n        [Fields.target]: span.spanID,\n        [Fields.source]: parentSpanID,\n      });\n    }\n  }\n\n  return { nodes, edges };\n}\n\n/**\n * Get the duration of the whole trace as it isn't a part of the response data.\n * Note: Seems like this should be the same as just longest span, but this is probably safer.\n */\nfunction findTraceDuration(spans: Span[]): number {\n  let traceEndTime = 0;\n  let traceStartTime = Infinity;\n\n  for (const span of spans) {\n    if (span.startTime < traceStartTime) {\n      traceStartTime = span.startTime;\n    }\n\n    if (span.startTime + span.duration > traceEndTime) {\n      traceEndTime = span.startTime + span.duration;\n    }\n  }\n\n  return traceEndTime - traceStartTime;\n}\n","import logfmt from 'logfmt';\n\nexport function convertTagsLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  const data: any = logfmt.parse(tags);\n  Object.keys(data).forEach((key) => {\n    const value = data[key];\n    if (typeof value !== 'string') {\n      data[key] = String(value);\n    }\n  });\n  return JSON.stringify(data);\n}\n\nexport function transformToLogfmt(tags: string | undefined) {\n  if (!tags) {\n    return '';\n  }\n  try {\n    return logfmt.stringify(JSON.parse(tags));\n  } catch {\n    return tags;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\nimport { Icon, InlineField, InlineFieldRow, InlineLabel, Input, useStyles } from '@grafana/ui';\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { JaegerQuery } from '../types';\n\nconst durationPlaceholder = 'e.g. 1.2s, 100ms, 500us';\n\ntype Props = {\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport function AdvancedOptions({ query, onChange }: Props) {\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const styles = useStyles(getStyles);\n\n  return (\n    <div>\n      <InlineFieldRow>\n        <div className={styles.advancedOptionsContainer} onClick={() => setShowAdvancedOptions(!showAdvancedOptions)}>\n          <InlineLabel as=\"div\">\n            Advanced options{' '}\n            <Icon className={showAdvancedOptions ? styles.angleUp : styles.angleDown} name=\"angle-down\" />\n          </InlineLabel>\n        </div>\n      </InlineFieldRow>\n      <CSSTransition\n        in={showAdvancedOptions}\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={300}\n        classNames={styles}\n      >\n        <div>\n          <InlineFieldRow>\n            <InlineField label=\"Min Duration\" labelWidth={21} grow>\n              <Input\n                value={query.minDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    minDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Max Duration\" labelWidth={21} grow>\n              <Input\n                value={query.maxDuration || ''}\n                placeholder={durationPlaceholder}\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    maxDuration: v.currentTarget.value,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n          <InlineFieldRow>\n            <InlineField label=\"Limit\" labelWidth={21} grow tooltip=\"Maximum numbers of returned results\">\n              <Input\n                value={query.limit || ''}\n                type=\"number\"\n                onChange={(v) =>\n                  onChange({\n                    ...query,\n                    limit: v.currentTarget.value ? parseInt(v.currentTarget.value, 10) : undefined,\n                  })\n                }\n              />\n            </InlineField>\n          </InlineFieldRow>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme) {\n  return {\n    advancedOptionsContainer: css`\n      margin: 0 ${theme.spacing.xs} ${theme.spacing.xs} 0;\n      width: 100%;\n      cursor: pointer;\n    `,\n    enter: css`\n      label: enter;\n      height: 0;\n      opacity: 0;\n    `,\n    enterActive: css`\n      label: enterActive;\n      height: 108px;\n      opacity: 1;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    exit: css`\n      label: exit;\n      height: 108px;\n      opacity: 1;\n    `,\n    exitActive: css`\n      label: exitActive;\n      height: 0;\n      opacity: 0;\n      transition: height 300ms ease, opacity 300ms ease;\n    `,\n    angleUp: css`\n      transform: rotate(-180deg);\n      transition: transform 300ms;\n    `,\n    angleDown: css`\n      transform: rotate(0deg);\n      transition: transform 300ms;\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineField, InlineFieldRow, Input, Select } from '@grafana/ui';\nimport React, { useEffect, useState } from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery } from '../types';\nimport { transformToLogfmt } from '../util';\nimport { AdvancedOptions } from './AdvancedOptions';\n\ntype Props = {\n  datasource: JaegerDatasource;\n  query: JaegerQuery;\n  onChange: (value: JaegerQuery) => void;\n};\n\nexport const ALL_OPERATIONS_KEY = 'All';\nconst allOperationsOption: SelectableValue<string> = {\n  label: ALL_OPERATIONS_KEY,\n  value: undefined,\n};\n\nexport function SearchForm({ datasource, query, onChange }: Props) {\n  const [serviceOptions, setServiceOptions] = useState<Array<SelectableValue<string>>>();\n  const [operationOptions, setOperationOptions] = useState<Array<SelectableValue<string>>>();\n\n  useEffect(() => {\n    const getServices = async () => {\n      const services = await loadServices({\n        dataSource: datasource,\n        url: '/api/services',\n        notFoundLabel: 'No service found',\n      });\n      setServiceOptions(services);\n    };\n    getServices();\n  }, [datasource]);\n\n  useEffect(() => {\n    const getOperations = async () => {\n      const operations = await loadServices({\n        dataSource: datasource,\n        url: `/api/services/${encodeURIComponent(query.service!)}/operations`,\n        notFoundLabel: 'No operation found',\n      });\n      setOperationOptions([allOperationsOption, ...operations]);\n    };\n    if (query.service) {\n      getOperations();\n    }\n  }, [datasource, query.service]);\n\n  return (\n    <div className={css({ maxWidth: '500px' })}>\n      <InlineFieldRow>\n        <InlineField label=\"Service\" labelWidth={14} grow>\n          <Select\n            menuShouldPortal\n            options={serviceOptions}\n            value={serviceOptions?.find((v) => v.value === query.service) || null}\n            onChange={(v) => {\n              onChange({\n                ...query,\n                service: v.value!,\n                operation: query.service !== v.value ? undefined : query.operation,\n              });\n            }}\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Operation\" labelWidth={14} grow disabled={!query.service}>\n          <Select\n            menuShouldPortal\n            options={operationOptions}\n            value={operationOptions?.find((v) => v.value === query.operation) || null}\n            onChange={(v) =>\n              onChange({\n                ...query,\n                operation: v.value!,\n              })\n            }\n            menuPlacement=\"bottom\"\n            isClearable\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Tags\" labelWidth={14} grow>\n          <Input\n            value={transformToLogfmt(query.tags)}\n            placeholder=\"http.status_code=200 error=true\"\n            onChange={(v) =>\n              onChange({\n                ...query,\n                tags: v.currentTarget.value,\n              })\n            }\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <AdvancedOptions query={query} onChange={onChange} />\n    </div>\n  );\n}\n\ntype Options = { dataSource: JaegerDatasource; url: string; notFoundLabel: string };\n\nconst loadServices = async ({ dataSource, url, notFoundLabel }: Options): Promise<Array<SelectableValue<string>>> => {\n  const services: string[] | null = await dataSource.metadataRequest(url);\n\n  if (!services) {\n    return [{ label: notFoundLabel, value: notFoundLabel }];\n  }\n\n  const serviceOptions: SelectableValue[] = services.sort().map((service) => ({\n    label: service,\n    value: service,\n  }));\n\n  return serviceOptions;\n};\n","import { identity, omit, pick, pickBy } from 'lodash';\nimport { lastValueFrom, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  DataSourceJsonData,\n  dateMath,\n  DateTime,\n  FieldType,\n  MutableDataFrame,\n} from '@grafana/data';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv } from '@grafana/runtime';\n\nimport { serializeParams } from 'app/core/utils/fetch';\nimport { getTimeSrv, TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { createTableFrame, createTraceFrame } from './responseTransform';\nimport { createGraphFrames } from './graphTransform';\nimport { JaegerQuery } from './types';\nimport { convertTagsLogfmt } from './util';\nimport { ALL_OPERATIONS_KEY } from './components/SearchForm';\nimport { NodeGraphOptions } from 'app/core/components/NodeGraphSettings';\n\nexport interface JaegerJsonData extends DataSourceJsonData {\n  nodeGraph?: NodeGraphOptions;\n}\n\nexport class JaegerDatasource extends DataSourceApi<JaegerQuery, JaegerJsonData> {\n  uploadedJson: string | ArrayBuffer | null = null;\n  nodeGraph?: NodeGraphOptions;\n  constructor(\n    private instanceSettings: DataSourceInstanceSettings<JaegerJsonData>,\n    private readonly timeSrv: TimeSrv = getTimeSrv()\n  ) {\n    super(instanceSettings);\n    this.nodeGraph = instanceSettings.jsonData.nodeGraph;\n  }\n\n  async metadataRequest(url: string, params?: Record<string, any>): Promise<any> {\n    const res = await lastValueFrom(this._request(url, params, { hideFromInspector: true }));\n    return res.data.data;\n  }\n\n  query(options: DataQueryRequest<JaegerQuery>): Observable<DataQueryResponse> {\n    // At this moment we expect only one target. In case we somehow change the UI to be able to show multiple\n    // traces at one we need to change this.\n    const target: JaegerQuery = options.targets[0];\n    if (!target) {\n      return of({ data: [emptyTraceDataFrame] });\n    }\n\n    if (target.queryType !== 'search' && target.query) {\n      return this._request(`/api/traces/${encodeURIComponent(target.query)}`).pipe(\n        map((response) => {\n          const traceData = response?.data?.data?.[0];\n          if (!traceData) {\n            return { data: [emptyTraceDataFrame] };\n          }\n          let data = [createTraceFrame(traceData)];\n          if (this.nodeGraph?.enabled) {\n            data.push(...createGraphFrames(traceData));\n          }\n          return {\n            data,\n          };\n        })\n      );\n    }\n\n    if (target.queryType === 'upload') {\n      if (!this.uploadedJson) {\n        return of({ data: [] });\n      }\n\n      try {\n        const traceData = JSON.parse(this.uploadedJson as string).data[0];\n        let data = [createTraceFrame(traceData)];\n        if (this.nodeGraph?.enabled) {\n          data.push(...createGraphFrames(traceData));\n        }\n        return of({ data });\n      } catch (error) {\n        return of({ error: { message: 'JSON is not valid Jaeger format' }, data: [] });\n      }\n    }\n\n    let jaegerQuery = pick(target, ['operation', 'service', 'tags', 'minDuration', 'maxDuration', 'limit']);\n    // remove empty properties\n    jaegerQuery = pickBy(jaegerQuery, identity);\n    if (jaegerQuery.tags) {\n      jaegerQuery = {\n        ...jaegerQuery,\n        tags: convertTagsLogfmt(getTemplateSrv().replace(jaegerQuery.tags, options.scopedVars)),\n      };\n    }\n\n    if (jaegerQuery.operation === ALL_OPERATIONS_KEY) {\n      jaegerQuery = omit(jaegerQuery, 'operation');\n    }\n\n    // TODO: this api is internal, used in jaeger ui. Officially they have gRPC api that should be used.\n    return this._request(`/api/traces`, {\n      ...jaegerQuery,\n      ...this.getTimeRange(),\n      lookback: 'custom',\n    }).pipe(\n      map((response) => {\n        return {\n          data: [createTableFrame(response.data.data, this.instanceSettings)],\n        };\n      })\n    );\n  }\n\n  async testDatasource(): Promise<any> {\n    return lastValueFrom(\n      this._request('/api/services').pipe(\n        map((res) => {\n          const values: any[] = res?.data?.data || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and services found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no services received. Verify that Jaeger is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Jaeger: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Jaeger';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${JSON.stringify(err.data)}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n    );\n  }\n\n  getTimeRange(): { start: number; end: number } {\n    const range = this.timeSrv.timeRange();\n    return {\n      start: getTime(range.from, false),\n      end: getTime(range.to, true),\n    };\n  }\n\n  getQueryDisplayText(query: JaegerQuery) {\n    return query.query || '';\n  }\n\n  private _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const params = data ? serializeParams(data) : '';\n    const url = `${this.instanceSettings.url}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch(req);\n  }\n}\n\nfunction getTime(date: string | DateTime, roundUp: boolean) {\n  if (typeof date === 'string') {\n    date = dateMath.parse(date, roundUp)!;\n  }\n  return date.valueOf() * 1000;\n}\n\nconst emptyTraceDataFrame = new MutableDataFrame({\n  fields: [\n    {\n      name: 'trace',\n      type: FieldType.trace,\n      values: [],\n    },\n  ],\n  meta: {\n    preferredVisualisationType: 'trace',\n    custom: {\n      traceFormat: 'jaeger',\n    },\n  },\n});\n","import { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { NodeGraphSettings } from 'app/core/components/NodeGraphSettings';\nimport { TraceToLogsSettings } from 'app/core/components/TraceToLogsSettings';\nimport React from 'react';\n\nexport type Props = DataSourcePluginOptionsEditorProps;\n\nexport const ConfigEditor: React.FC<Props> = ({ options, onOptionsChange }) => {\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:16686\"\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <TraceToLogsSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n      <div className=\"gf-form-group\">\n        <NodeGraphSettings options={options} onOptionsChange={onOptionsChange} />\n      </div>\n    </>\n  );\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { JaegerDatasource } from './datasource';\nimport { QueryEditor } from './components/QueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin(JaegerDatasource).setConfigEditor(ConfigEditor).setQueryEditor(QueryEditor);\n","import { css } from '@emotion/css';\nimport { QueryEditorProps } from '@grafana/data';\nimport { FileDropzone, InlineField, InlineFieldRow, QueryField, RadioButtonGroup, useTheme2 } from '@grafana/ui';\nimport React from 'react';\nimport { JaegerDatasource } from '../datasource';\nimport { JaegerQuery, JaegerQueryType } from '../types';\nimport { SearchForm } from './SearchForm';\n\ntype Props = QueryEditorProps<JaegerDatasource, JaegerQuery>;\n\nexport function QueryEditor({ datasource, query, onChange, onRunQuery }: Props) {\n  const theme = useTheme2();\n\n  const onChangeQuery = (value: string) => {\n    const nextQuery: JaegerQuery = { ...query, query: value };\n    onChange(nextQuery);\n  };\n\n  const renderEditorBody = () => {\n    switch (query.queryType) {\n      case 'search':\n        return <SearchForm datasource={datasource} query={query} onChange={onChange} />;\n      case 'upload':\n        return (\n          <div className={css({ padding: theme.spacing(2) })}>\n            <FileDropzone\n              options={{ multiple: false }}\n              onLoad={(result) => {\n                datasource.uploadedJson = result;\n                onRunQuery();\n              }}\n            />\n          </div>\n        );\n      default:\n        return (\n          <InlineFieldRow>\n            <InlineField label=\"Trace ID\" labelWidth={14} grow>\n              <QueryField\n                query={query.query}\n                onChange={onChangeQuery}\n                onRunQuery={onRunQuery}\n                onBlur={() => {}}\n                placeholder={'Enter a Trace ID (run with Shift+Enter)'}\n                portalOrigin=\"jaeger\"\n              />\n            </InlineField>\n          </InlineFieldRow>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={css({ width: '100%' })}>\n        <InlineFieldRow>\n          <InlineField label=\"Query type\">\n            <RadioButtonGroup<JaegerQueryType>\n              options={[\n                { value: 'search', label: 'Search' },\n                { value: undefined, label: 'TraceID' },\n                { value: 'upload', label: 'JSON file' },\n              ]}\n              value={query.queryType}\n              onChange={(v) =>\n                onChange({\n                  ...query,\n                  queryType: v,\n                })\n              }\n              size=\"md\"\n            />\n          </InlineField>\n        </InlineFieldRow>\n        {renderEditorBody()}\n      </div>\n    </>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","\n/*\nModule dependencies.\n*/\n\n/*\nJSON:\n\nParse logplex request bodies, providing the\nparsed object as `req.body`.\n\nOptions: none\n\n@param content_type {String} use when Content-Type matches this string\n@param parser {Function} parsing function takes String body and returns new body\n@return {Function}\n@api public\n*/\n\nexports = module.exports = function(options) {\n  var limit;\n  if (options == null) options = {};\n\n  return function(req, res, next) {\n    if (req._body) return next();\n    var is_mime = req.header('content-type') === options.contentType;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = req.body || {};\n    var buf;\n    buf = \"\";\n    req.setEncoding(\"utf8\");\n    req.on(\"data\", function(chunk) {\n      return buf += chunk;\n    });\n    req.on(\"end\", function() {\n      try {\n        var lines = []\n        buf.trim().split(\"\\n\").forEach(function(line){\n          lines.push(options.parser(line))\n        })\n        req.body = lines;\n      } catch (err) {\n        err.body = buf;\n        err.status = 400;\n        return next(err);\n      }\n      return next();\n    });\n  };\n};\n","var split = require('split');\nvar through = require('through');\nvar Readable = require('stream').Readable;\nvar PassThrough = require('stream').PassThrough;\nvar logfmt   = require('../logfmt');\n\nexports = module.exports = function(options){\n  if(options == null) options = {};\n  var mime = options.contentType || \"application/logplex-1\";\n\n  return function(req, res, next) {\n\n    //honor already parsed bodies\n    if (req._body) return next();\n\n    //mime-type check\n    var is_mime = req.header('content-type') === mime;\n    if (!is_mime) return next();\n    req._body = true;\n    req.body = new PassThrough({objectMode: true});\n    req.pipe(logfmt.streamParser()).pipe(req.body);\n\n    return next();\n  }\n}\n\n","exports.debug = false;\n\nexports.parse = function(line) {\n  var key = '';\n  var value = '';\n  var is_number = true;\n  var in_key    = false;\n  var in_value  = false;\n  var in_quote  = false;\n  var had_quote = false;\n  var object    = {};\n  var debug     = exports.debug;\n\n  if(line[line.length - 1] == '\\n'){\n    line = line.slice(0,line.length - 1)\n  }\n\n  for(var i=0; i <= line.length; i++){\n\n    if((line[i] == ' ' && !in_quote) || i == line.length){\n      if(in_key && key.length > 0){\n        object[key] = true;\n      }else if(in_value){\n        if(value == 'true') value = true;\n        else if(value == 'false') value = false;\n        else if(value === '' && !had_quote) value = null;\n        object[key] = value;\n        value = '';\n      }\n\n      if(i == line.length) break;\n      else {\n        in_key   = false;\n        in_value = false;\n        in_quote = false;\n        had_quote = false;\n      }\n    }\n\n    if(line[i] == '=' && !in_quote){\n      if(debug) console.log('split')\n      //split\n      in_key = false;\n      in_value = true;\n    }\n    else if(line[i] == '\\\\'){\n      i ++ ;\n      value += line[i];\n      if(debug) console.log('escape: ' + line[i])\n    }\n    else if(line[i] == '\"'){\n      had_quote = true;\n      in_quote = !in_quote;\n      if(debug) console.log('in quote: ' + in_quote)\n    }\n    else if(line[i] != ' ' && !in_value && !in_key){\n      if(debug) console.log('start key with: ' + line[i])\n      in_key = true;\n      key = line[i];\n    }\n    else if(in_key){\n      if(debug) console.log('add to key: ' + line[i])\n      key += line[i]\n    }\n    else if(in_value){\n      if(debug) console.log('add to value: ' + line[i])\n      value += line[i];\n    }\n  }\n\n  return object;\n}\n","exports.log = function(data, stream) {\n  this.stream = this.stream || process.stdout;\n  if(stream == undefined) stream = this.stream;\n\n  var logData = Object.assign({}, this.defaultData, data);\n\n  if(this.timers){\n    for(var key in this.timers){\n      var now = (new Date()).getTime()\n      logData[key] = (now - this.timers[key]).toString() + 'ms' ;\n    }\n  }\n\n  stream.write(this.stringify(logData) + \"\\n\");\n}\n\nexports.time = function(label) {\n  var logfmt = require('../logfmt');\n  var startTime = (new Date()).getTime();\n  var label  = label || 'elapsed';\n  var timer  = new logfmt();\n  timer.stream = this.stream;\n  timer.defaultData = this.defaultData;\n  timer.timers = Object.assign({}, this.timers)\n  timer.timers[label] = startTime;\n  return timer;\n}\n\nexports.namespace = function(object) {\n  var logfmt = require('../logfmt');\n  var namespaced = new logfmt()\n  var namespace  = Object.assign({}, this.defaultData, object);\n  namespaced.stream = this.stream;\n  namespaced.defaultData = namespace\n  namespaced.timers = this.timers;\n  return namespaced;\n}\n\nexports.error = function(err, id) {\n  this.maxErrorLines = this.maxErrorLines || 10;\n  if (id === undefined) {\n    id = Math.random().toString().slice(2, 12);\n  }\n  var errorLogger = this.namespace({\n    error: true,\n    id:id,\n    now: (new Date()).toISOString()\n  })\n  errorLogger.log({ message:err.message });\n  if (err.stack) {\n    var stack = err.stack.split('\\n');\n    for (var line in stack) {\n      if (line >= this.maxErrorLines) break;\n      errorLogger.log({ line:line, trace:stack[line] });\n    }\n  }\n}\n","var commonFormatter = function(req, res){\n  if((typeof req.path) == 'function'){\n    //in restify path is a function\n    var path = req.path();\n  }\n  else{\n    //in express it is an attribute\n    var path = req.originalUrl || req.path || req.url;\n  }\n\n  var httpHeader = req.header && req.header('x-forwarded-for')\n  var requestID  = req.header && req.header('x-request-id')\n\n  var ip = req.ip || httpHeader\n                  || req.connection.remoteAddress;\n\n  var requestData =  {\n    ip: ip,\n    time: (new Date()).toISOString(),\n    method: req.method,\n    path: path,\n    \"status\": res.statusCode,\n  }\n\n  if (requestID) {\n    requestData.request_id = requestID;\n  }\n\n  if(res.get){\n    requestData.content_length = res.get('content-length');\n    requestData.content_type = res.get('content-type');\n  }\n  return requestData;\n}\n\nvar immediateLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var data = formatter(req, res);\n    logger.log(data);\n    next();\n  }\n}\n\nvar timingLogger = function(logger, options, formatter){\n  return function(req, res, next){\n    var elapsed = options.elapsed || 'elapsed';\n    var timer   = logger.time(elapsed);\n    var end = res.end;\n    res.end = function(chunk, encoding) {\n      var data = formatter(req, res);\n      res.end = end;\n      res.end(chunk, encoding);\n      timer.log(data);\n    };\n    next();\n  }\n}\n\nexports.init = function(logger, options, formatter) {\n  this.logger = logger;\n\n  if(!formatter && !options){\n    formatter = commonFormatter;\n    options = {};\n  }\n  else if(!formatter){\n    if(typeof options == 'function'){\n      formatter = options;\n      options = {};\n    }else{\n      formatter = commonFormatter;\n    }\n  }\n  options = options || {};\n\n  if(options.immediate){\n    return immediateLogger(logger, options, formatter);\n  }else{\n    return timingLogger(logger, options, formatter);\n  }\n}\n\nexports.commonFormatter = commonFormatter;\n","var split       = require('split')\nvar through     = require('through');\nvar PassThrough = require('stream').PassThrough;\n\n//returns a stream that splits and parses logfmt into objects\nexports.streamParser = function(options){\n  var options = options || {};\n\n  var streamParser = new PassThrough();\n  var self = this;\n\n  var logfmtStream = through(function(line){\n    if(line !== '') this.queue(self.parse(line))\n  })\n\n  // When a source stream is piped to us, undo that pipe, and save\n  // off the source stream piped into our internally managed streams.\n  streamParser.on('pipe', function(source) {\n    if(source.unpipe) source.unpipe(this);\n    this.transformStream = source.pipe(split()).pipe(logfmtStream);\n  });\n\n  // When we're piped to another stream, instead pipe our internal\n  // transform stream to that destination.\n  streamParser.pipe = function(destination, options) {\n    return this.transformStream.pipe(destination, options);\n  };\n\n  return streamParser;\n}\n\n// returns a stream that stringifies objects\nexports.streamStringify = function(options){\n  var self = this;\n  var options = options || {};\n  if(options.hasOwnProperty('delimiter')){\n    var delim = options.delimiter;\n  }else{\n    var delim = \"\\n\";\n  }\n\n  return through(function(data){\n    this.queue(self.stringify(data) + delim)\n  }, function(){\n    this.queue(null)\n  })\n}\n","exports.stringify = function(data){\n  var line = '';\n\n  for(var key in data) {\n    var value = data[key];\n    var is_null = false;\n    if(value == null) {\n      is_null = true;\n      value = '';\n    }\n    else value = value.toString();\n\n    var needs_quoting  = value.indexOf(' ') > -1 || value.indexOf('=') > -1;\n    var needs_escaping = value.indexOf('\"') > -1 || value.indexOf(\"\\\\\") > -1;\n\n    if(needs_escaping) value = value.replace(/[\"\\\\]/g, '\\\\$&');\n    if(needs_quoting) value = '\"' + value + '\"';\n    if(value === '' && !is_null) value = '\"\"';\n\n    line += key + '=' + value + ' ';\n  }\n\n  //trim traling space\n  return line.substring(0,line.length-1);\n}\n\n","//constructor\nfunction logfmt() {\n}\nmodule.exports = logfmt;\n\nvar streaming        = require('./lib/streaming');\nvar bodyParser       = require('./lib/body_parser');\nvar bodyParserStream = require('./lib/body_parser_stream');\nvar logfmtParser     = require('./lib/logfmt_parser');\nvar logger           = require('./lib/logger');\nvar requestLogger    = require('./lib/request_logger');\nvar serializer       = require('./lib/stringify');\n\n//Build up logfmt prototype\nObject.assign(logfmt.prototype, logger);\nObject.assign(logfmt.prototype, streaming);\n\nlogfmt.prototype.stringify = serializer.stringify;\nlogfmt.prototype.parse = logfmtParser.parse;\n\n// Synchronous body parser\nlogfmt.prototype.bodyParser = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParser({ contentType: mime, parser: this.parse });\n};\n\n// Stream parser\nlogfmt.prototype.bodyParserStream = function(options) {\n  options || (options = {});\n  var mime = options.contentType || \"application/logplex-1\";\n  return bodyParserStream({ contentType: mime });\n};\n\nlogfmt.prototype.requestLogger = function(options, formatter) {\n  return requestLogger.init(this, options, formatter);\n};\n\nlogfmt.prototype.requestLogger.commonFormatter = requestLogger.commonFormatter;\n\nObject.assign(logfmt, logfmt.prototype);\n","//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data === null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n"],"names":["NodeGraphSettings","options","onOptionsChange","styles","useStyles","getStyles","className","container","InlineFieldRow","row","InlineField","tooltip","label","labelWidth","InlineSwitch","value","jsonData","nodeGraph","enabled","onChange","event","updateDatasourcePluginJsonDataOption","currentTarget","checked","theme","css","TraceToLogsSettings","width","infoText","DataSourcePicker","pluginId","current","tracesToLogs","datasourceUid","noDefault","ds","uid","tags","TagsInput","grow","Input","type","placeholder","v","spanStartTimeShift","spanEndTimeShift","filterByTraceID","filterBySpanID","defaultChecked","lokiSearch","spacing","md","colors","textSemiWeak","createGraphFrames","data","nodes","edges","traceDuration","spans","traceEndTime","traceStartTime","Infinity","span","startTime","duration","findTraceDuration","spanMap","makeSpanMap","index","length","id","spanID","parentIds","references","filter","r","refType","map","process","processes","processID","ranges","children","c","childrenDuration","getNonOverlappingDuration","selfDuration","stats","getStats","push","Fields","serviceName","operationName","main","secondary","parentSpanID","find","convertTraceToGraph","nodesFrame","edgesFrame","makeFrames","node","add","edge","convertTagsLogfmt","logfmt","Object","keys","forEach","key","String","JSON","stringify","transformToLogfmt","parse","durationPlaceholder","AdvancedOptions","query","showAdvancedOptions","setShowAdvancedOptions","useState","advancedOptionsContainer","onClick","InlineLabel","as","Icon","angleUp","angleDown","name","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","minDuration","maxDuration","limit","parseInt","undefined","xs","enter","enterActive","exit","exitActive","allOperationsOption","SearchForm","datasource","serviceOptions","setServiceOptions","operationOptions","setOperationOptions","useEffect","async","services","loadServices","dataSource","url","notFoundLabel","getServices","service","operations","encodeURIComponent","getOperations","maxWidth","Select","menuShouldPortal","operation","menuPlacement","isClearable","disabled","metadataRequest","sort","JaegerDatasource","DataSourceApi","constructor","instanceSettings","timeSrv","getTimeSrv","super","this","params","lastValueFrom","_request","hideFromInspector","target","targets","of","emptyTraceDataFrame","queryType","pipe","response","traceData","createTraceFrame","uploadedJson","error","message","jaegerQuery","pick","pickBy","identity","getTemplateSrv","replace","scopedVars","omit","getTimeRange","lookback","createTableFrame","res","status","catchError","err","statusText","range","timeRange","start","getTime","from","end","to","getQueryDisplayText","apiUrl","serializeParams","req","getBackendSrv","fetch","date","roundUp","dateMath","valueOf","MutableDataFrame","fields","FieldType","values","meta","preferredVisualisationType","custom","traceFormat","plugin","DataSourcePlugin","setConfigEditor","DataSourceHttpSettings","defaultUrl","dataSourceConfig","showAccessOptions","setQueryEditor","onRunQuery","useTheme2","onChangeQuery","nextQuery","RadioButtonGroup","size","padding","FileDropzone","multiple","onLoad","result","QueryField","onBlur","portalOrigin","renderEditorBody","removeClass","classes","split","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","concat","appliedClasses","appear","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","getClassNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_proto","prototype","phase","scrollTop","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","defaultProps","propTypes","module","exports","next","_body","header","contentType","body","buf","setEncoding","on","chunk","lines","trim","line","parser","PassThrough","mime","objectMode","streamParser","debug","in_key","in_value","in_quote","had_quote","object","slice","i","console","log","stream","stdout","logData","assign","defaultData","timers","now","Date","toString","write","time","timer","namespace","namespaced","maxErrorLines","Math","random","errorLogger","toISOString","stack","trace","commonFormatter","path","originalUrl","httpHeader","requestID","requestData","ip","connection","remoteAddress","method","statusCode","request_id","get","content_length","content_type","init","logger","formatter","immediate","immediateLogger","elapsed","encoding","timingLogger","through","self","logfmtStream","queue","source","unpipe","transformStream","destination","streamStringify","hasOwnProperty","delim","delimiter","is_null","needs_quoting","indexOf","substring","streaming","bodyParser","bodyParserStream","logfmtParser","requestLogger","serializer","Decoder","matcher","mapper","decoder","soFar","emit","piece","buffer","pieces","pop","b","Stream","opts","ended","destroyed","_ended","drain","paused","shift","_end","writable","readable","autoDestroy","destroy","nextTick","pause","resume"],"sourceRoot":""}